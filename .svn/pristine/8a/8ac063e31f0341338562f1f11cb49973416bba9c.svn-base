package com.elsa.dfsutils.handle;

import java.io.File;

import org.im4java.core.ConvertCmd;
import org.im4java.core.IMOperation;

import com.elsa.dfsutils.file.ImgFile;
import com.elsa.dfsutils.filter.FileFilter;
import com.elsa.dfsutils.filter.ImgCompresseFilter;
import com.elsa.dfsutils.filter.ImgReSizeFilter;

/**
 * 
 * @describe 
 * @author 叶礼锋
 * 
 * 2014-12-22 下午2:52:41
 */
@SuppressWarnings(value = { "unused", "deprecation", "serial", "unchecked", "static-access", "rawtypes" })
public class ImgHandler implements FileHandle{

	private ImgFile imgFile=null;
	private static String imageMagickPath=null;
	
	public ImgHandler(ImgFile imgFile) {
		this.imgFile=imgFile;
	}

	@Override
	public void handle() throws Exception {
		File file=imgFile.getFile();
		String filePath=file.getAbsolutePath();
		FileFilter<IMOperation> compresseFilter=new ImgCompresseFilter();
		FileFilter<IMOperation> reSizeFilter=new ImgReSizeFilter();
		compresseFilter.setSuccessor(reSizeFilter);
		
		IMOperation operation=new IMOperation();
		operation.addImage(filePath);
		compresseFilter.doFilter(imgFile,operation);
		File outFile=File.createTempFile("TMP",file.getName(), file.getParentFile());
		operation.addImage(outFile.getAbsolutePath());
		runConvert(operation);
		imgFile.setOriginalFile(file);
		imgFile.setFile(outFile);
	}
	
	/**
	 * 从环境变量中搜索ImageMagick的路径，限Windows
	 * @return
	 */
	public String searchImageMagickPath(){
		if(imageMagickPath==null){
			String path=System.getenv("PATH");
			if(path!=null&&path.length()>0){
				for (String ph : path.split(";")) {
					if(ph.toUpperCase().indexOf("IMAGEMAGICK")>0){
						imageMagickPath=ph;
						break;
					}
				}
			}
		}
		return imageMagickPath;
	}
	
	public void runConvert(IMOperation op) throws Exception{
		ConvertCmd convert=new ConvertCmd();
		if(!File.separator.matches("/")){//如果是Linux，不需要设置
			String imPath=searchImageMagickPath();
			if(imPath!=null){
				convert.setSearchPath(imPath);
			}else{
				throw new RuntimeException("Windows下必须设置SearchPath!");
			}
		}
		convert.run(op);
	}
}
